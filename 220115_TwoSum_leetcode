#FIRST FILE: I HAVE NO IDEA WHAT I AM DOING. 
#15 Jan 2022

#LEETCODE TWOSUM

#Given an integer array nums and an integer target, return indices of the 2 numbers in nums where the sum of those 2 numbers = target
#Decompositon of problem in human langauge (brute force/first method I can think of):
#1. Need to retrieve the values of all the integers in array.
#2. Need to compare for all possible combinations in the list = sum(numA + numB)
#3. If sum(numA + numB) = target, return target and break;
#4. (not in scope: to prevent infinite loops); if all possible combinations have been tested, no answer found. 
#else:
#  return 'No possible combination';

 
#[1, 2, 3, 4, 5] ; test cases = 1+2,1+3,1+4,1+5,2+1,2+2,2+3,2+4,2+5, up till 5+1; 
#can't be bothered to figure out building in combinations vs permutations for code yet. 
#>Don't understand how it will affect time complexity, or how to even calculate time complexity. 
#>feels that most days I just cause infinite loops thru shitcode so time complexity is moot anyways,
#>would checking if a permutation had already been tested instead of just running the for loop INCREASE the time complexity? 
#>It's a comparison operation which would eat resources too?
#this can be further broken down as:
#retrieve index 0 from array, take sum of nums[0] with every other indexed integer, repeat for all indexes
for num in nums:
  index = 0
  sum = num[0] + num[i in range(len(nums))
  if sum = target:
    return sum
    break;
  print('The first TwoSum combination found is ' , 
#how to tell computer to iterate over all other indexes similar to index 0? Figure out & insert below
  
  



nums = [1,2,3,4,5]
target = 9
testNumA = 
for num in nums: 
  target_test = 

else: 
  return str('No answer')


problems: how to retrieve the numA & numB from array?
- previously have experienced with a similar question, kept getting error float is not an iterable object
-- this should not be an issue here as this list is defined in integers;
--- how to solve this problem if the array is comprised of floats?
---- explicit conversion of all float integers into string, do conversions then return results in float? seems inefficient AF...

NOTES:
in python pseudocode, := and = are the same thing (assignment operator). = or == can be a equality operator. 

in normal brute force solution, this would result in time complexity of O(n^2); whatever that means, long time to solve if the 
required combination is the last to be tried using our algorithm.


#rahulsharma19940602; https://www.code-recipe.com/post/two-sum
class Solution:
   def twoSum(self, nums: List[int], target: int) -> List[int]:
       seen = {}
       for i, value in enumerate(nums):
           remaining = target - nums[i]
           
           if remaining in seen:
               return [i, seen[remaining]]
            
           seen[value] = i

#tkuo-tkuo:
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        # Use defaultdict to handy key-error automatically 
        d = collections.defaultdict(list) # dict 
        for i, num in enumerate(nums):
            d[num].append(i)
                
        for num in nums:
            if num*2 == target:
                # Consider below two cases
                # [3, 3, 2, 4] & [3, 2, 4]
                if len(d[num]) == 2: # former case, [3, 3, 2, 4], ans = [0, 1]
                    return d[num]
                else:                # latter case, [3, 2, 4], ans = [2, 3]
                    continue 
            
            if target-num in d:
                return d[target-num] + d[num]    
            
        # should NOT reach this return statement 
        return [-1, -1]                
